name: master

on: 
  push:
    branches:
      - master
    
env:
   APP_NAME: Iface.Oik.Tm
   MAJOR_VERSION: 0
   MINOR_VERSION: 3
   X64_PATH: src/Iface.Oik.Tm/bin/Release/netstandard2.0
   X86_PATH: src/Iface.Oik.Tm/bin/x86/Release/netstandard2.0

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
        
    - name: Build
      run: |
        dotnet build Iface.Oik.Tm.sln -c Release
        dotnet build Iface.Oik.Tm.Samples.sln -c Release
        dotnet build src/Iface.Oik.Tm/Iface.Oik.Tm.csproj -c Release -p:Platform=x86
      
    - name: Test
      run: dotnet test ${{env.APP_NAME}}.sln -c Release

    - name: Prepare version number
      id: version
      run: echo "::set-output name=id::${{env.MAJOR_VERSION}}.${{env.MINOR_VERSION}}.${{github.run_number}}"

    - name: Prepare release names
      id: release
      run: |
        echo "::set-output name=x64_release::${{env.APP_NAME}}.${{steps.version.outputs.id}}.zip"
        echo "::set-output name=x86_release::${{env.APP_NAME}}.x86.${{steps.version.outputs.id}}.zip"
        
    - name: Make archives
      run: |
        7z a ${{steps.release.outputs.x64_release}} "-i!./${{env.X64_PATH}}/*.dll" "-i!./${{env.X64_PATH}}/*.so"
        7z a ${{steps.release.outputs.x86_release}} "-i!./${{env.X86_PATH}}/*.dll" "-i!./${{env.X86_PATH}}/*.so"
      
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{steps.version.outputs.id}}
        release_name: ${{env.APP_NAME}} ${{steps.version.outputs.id}}
        
    - name: Upload Github Release (x64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./${{steps.release.outputs.x64_release}}
        asset_name: ${{steps.release.outputs.x64_release}}
        asset_content_type: application/zip

    - name: Upload Github Release (x86)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{steps.release.outputs.x86_release}}
        asset_name: ${{steps.release.outputs.x86_release}}
        asset_content_type: application/zip
